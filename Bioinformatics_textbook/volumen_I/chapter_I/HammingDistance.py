def hamming_distance(string1, string2):
	
	assert len(string1) == len(string2)
	distance = 0

	for i in range(len(string1)):
		if string1[i] != string2[i]:
			distance += 1
	return distance

'''def results(string1, string2):
	print(hamming_distance(string1, string2))

results('CGTGAGATAGCATATGGTAAATGTTCCGCAATCGCTACCGCCAACAACTCGTTCATCCCAATAATGTGCCCGGAGGGACAGTAACAGACTACGTGTACGGACGAGCCTGACCCAGCAAGGGTGGGAGTGACTCCATGCCATCTCCAATAACAAGCACCAACCAATGTCGCCGGCCTAAGGTAGCGCAGATCTAGTTTCATGTCCGAAGTTGGCTAGCCCTCTCTGCCGCGGTTAGGGAGGAAAAGCATGGCTAGTGTCGAGACGTACAACTAATCCGTGGCGTCAATCTCCCCTGCACTCGAGTACGCATATTGGTCCGCCACTCAGCGAATTATCTTATTGGAATGCCTCTTACAACACGGTATTGATTTAAACAGGATTAGAAGATTACTATACCTTTAGTAATTGGAGTGTTGAGTTTACGGAATCCTAATAATCAATCAGATACGCAGGTAAAGTATGTCACGTTACTGAGAAGTGGGTCGTCTATACATGAGGTCGTGTTCTTGCCTATTATATAGCAACCCTGTCAAGGCTTCTCTCCGAGCAAGCCGGACTCTGTCGCTTAGAGTCATGTGGGCACGTGTTACGTCGTCGTCAGCACGGGCTCAGGCCAATAGGGTATATAAATTGGAATGCTCCACGGTGAAAAGACTGGCTGCCGAATCCTGCCGCTGGGTACCCGTATTGCCGGCAATACAGGCCTAGTCGGTAGCTGCAGGAGAATACCGATTAACGGCGAAGGCGCCAGCCTCCGTAGTACCTGAGTTGTCGATCTACGGCGGAACCCGTGTACGCTTCATCAGCCCCTAACGGTTCGTTATTCATGATCCTGTTGCAAGTTCACGAACTCTAGCCCGGCGCACCAATAGCTTAATGTCGAAGTGTTCGTCATCTGGTGGAGCCCGTGCCCCGGAAGTCGGGGTAGTGATGTTCTACTTTCTATAAGTTGAGCGCCACCAGGAAGAGCTTCATCTTAAGCACCTGTTCCATTCAGAGAGCAGGTTCCTTTCGAAGTTTGGATACAGTCTGGAATGAGAGGCCAGTGTCACTGAATCGCTTTTTCAGCCTCCCATACGAATGC', 'GTTTCGCAAATATCGGGAACATATGGCTTTTGGCCTCTCCCTGGTCGGACGCTCGGATACAAAAGATCGCCCGAGCGTGCCATAGAACAACCAGTATGATTTTCAAGGATCGCGTATCAGCAGAGCAACTTCGTCGGACACGCGTATACCAGACTCACTGGTTTCGGGGCACGCTAAGAGGACTGAGTGTAACACTTCCTAATCATTGCCGATTAAGTCGGCGGAACAGGTTTTTCTGGCGGGACTCACTGTACGCGCGCGTTCGCCGCGGCTGCTGCCGACCTTAGTTGGCGGGGACGCCTCGGACATATAAGATGAAACTTGTTGAGCACTCCAGCGTAATGAGACGATTACCCAGCGTGCGTGACCACGGAAAACCTGCTAGTGCTTACTATTCCTTTTCCAGCCCATGCAACTACTTAGGGGCCGCCGGCGACAAGCGGACTTCATATCATCTGGTCTTAGTAAAGCTTTACGTATTATTGATAGATGGGAGGAATTAACAGCAGTTCCTACCGCACTTGGGTTTATCCGGATATAGGGATTAACTCGTTGGGATTATGCGTCTGCCTACTATCGACTTGCGCGTAGACCTGTGTGCGGAACACCCGATCCCTATTAACTTTAACCAGGGTCATGCCGGATTGACCTGAACTACGCCAAAATAAGGGAACCAAATGGTGTGCGGCGTTTGTATCCAAAGCCGGAAACTATTGGCCTACAACCCGATGACTCCTTTCAATCGGGACGTCCCTATACACTAGGTACATGATCGAAAGGTCTTGCTGGATGGATGCCGACAACATTGTAAGACAGCCTTGATAATGCGAATGTCTGACCCCGCGGCTGTGTCACGAGCTCAATCTCGGTCCTAGCGCCCAAACATCAGAGGATATCTCGACGGGTGAACATTATAACCCTTGATCGGTTGGTAGAAGTAAATCTACTTATCACTTCCCTTGGTGTGGATAATCACAGGGATGTTGAAGTTAGCGGTCCACCAACAGGCGAGTACGGGACTTCACACTCCGCAAGGTTACTCTTAATATCACATATCGCTGTCCCTAGTATTAAGTTGATGCGC')
'''